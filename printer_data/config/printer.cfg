## Voron Design VORON2 250/300/350mm Spider TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                           [mcu] section
## Thermistor types                    [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Bed sensor_pin                      [heater_bed] section
## Fan pins                            [heater_fan hotend_fan] amd [fan] sections
## Z Endstop Switch location           [safe_z_home] section
## Homing end position                 [gcode_macro G32] section
## Z Endstop Switch  offset for Z0     [stepper_z] section
## Probe points                        [quad_gantry_level] section
## Min & Max gantry corner postions    [quad_gantry_level] section
## PID tune                            [extruder] and [heater_bed] sections
## Fine tune E steps                   [extruder] section

# Include the necessary configurations
# --------------------------------------
[include stealthburner_leds.cfg]
[include mainsail.cfg]
#[include kiauh_macros.cfg]
#[include klicky-probe.cfg]
#[include klicky-z-calibration.cfg]
#[include macros/TEST_SPEED.cfg]
#[include macros/nozzle_scrub.cfg]
#[include macros/PA_Calibration.cfg]
#[include macros/sb_leds.cfg]
#[include bedfans.cfg]

#[exclude_object]
# --------------------------------------

[mcu]
canbus_uuid: 5127d338ba5b
#canbus_interface:can0

[mcu SB2040]
canbus_uuid: ea913f6d2453

## Uncomment below if you're using the Raspberry uart0 to communicate with Spider
#restart_method: command

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 3000                 #Max 4000, was 5000 in old config
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V, was 50 in old config
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
#      Misc
#####################################################################

[temperature_sensor RPi_4B]
sensor_type: rpi_temperature
sensor_type: temperature_host
min_temp: 10
max_temp: 100
gcode_id: PI

[temperature_sensor Spider_V1.1]
sensor_type: temperature_mcu

[temperature_sensor SB2040]
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: SB2040:gpio26
min_temp: 0
max_temp: 100

[adxl345]
cs_pin: SB2040:gpio1
spi_software_sclk_pin: SB2040:gpio0
spi_software_mosi_pin: SB2040:gpio3
spi_software_miso_pin: SB2040:gpio2
axes_map: x,y,z

[resonance_tester]
accel_chip: adxl345
probe_points: 175,175,20

# =================================
# =         DECLARATIONS          =
# =================================

#[input_shaper]
#shaper_freq_x: 48.4
#shaper_freq_y: 48.8
#shaper_type: mzv

#####################################################################
#      X/Y Stepper Settings
#####################################################################

##  Connected to X-MOT (B Motor) Left
[stepper_x]
step_pin: PE11
dir_pin: !PE10
enable_pin: !PE9
rotation_distance: 40
microsteps: 32      #Was 16 in old config
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_min: 0
position_endstop: 350
position_max: 350
homing_speed: 20   #Max 100, Was 100 in old config
homing_retract_dist: 0                              #Was 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PE7
diag_pin: ^PB14     # use the same pin that was previously the endstop_pin!
driver_SGTHRS: 255 # 255 is most sensitive value, 0 is least sensitive
interpolate: False          #Was true in old config
run_current: 0.2            #Was 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Connected to Y-MOT (A Motor) Right
[stepper_y]
step_pin: PD8
dir_pin: !PB12
enable_pin: !PD9
rotation_distance: 40
microsteps: 32      #Was 16 in old config
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_min: 0
position_endstop: 350
position_max: 351
homing_speed: 20  #Max 100, Was 100 in old config
homing_retract_dist: 0                              #Was 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PE15
diag_pin: ^PB13     # use the same pin that was previously the endstop_pin!
driver_SGTHRS: 255 # 255 is most sensitive value, 0 is least sensitive
interpolate: False          #Was true in old config
run_current: 0.2            #Was 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#   Z Stepper Settings
#####################################################################

## In Z-MOT Position
## Z0 Stepper - Front Left
[stepper_z]
step_pin: PD14
dir_pin: !PD13
enable_pin: !PD15
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32      #Was 16 in old config
##  In Z- Position
# endstop_pin: ^PA0                 #Outcommented becouse of Voron TAP
endstop_pin: probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5             #Outcommented becouse of Voron TAP
position_max: 340
position_min: -5
homing_speed: 8     #Was 25 in old config
second_homing_speed: 3
homing_retract_dist: 3

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PD10
#uart_address: 0           #Was uncommented in old config, not displayed in this config
interpolate: False          #Was true in old config
run_current: 0.1            #Was 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  In E1-MOT Position
##  Z1 Stepper - Rear Left
[stepper_z1]
step_pin: PE6
dir_pin: !PC13
enable_pin: !PE5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32      #Was 16 in old config

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC14
interpolate: False          #Was true in old config
run_current: 0.1            #Was 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  In E2-MOT Position
##  Z2 Stepper - Rear Right
[stepper_z2]
step_pin: PE2
dir_pin: !PE4
enable_pin: !PE3
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32      #Was 16 in old config

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PC15
interpolate: False          #Was true in old config
run_current: 0.1            #Was 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  In E3-MOT Position
##  Z3 Stepper - Front Right
[stepper_z3]
step_pin: PD12
dir_pin: !PC4
enable_pin: !PE8
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32      #Was 16 in old config

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PA15
interpolate: False          #Was true in old config
run_current: 0.1            #Was 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#   Extruder
#####################################################################

##  In E0-MOT Position
[extruder]
step_pin: SB2040:gpio9
dir_pin: !SB2040:gpio10
enable_pin: !SB2040:gpio7

heater_pin: SB2040:gpio6
sensor_pin: SB2040:gpio27

#step_pin: PD5
#dir_pin: PD6
#enable_pin: !PD4
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
#rotation_distance: 22.6789511   #Bondtech 5mm Drive Gears, Clockwork Extruder
rotation_distance: 4.5714       #Orbiter Extruder
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:10 for Stealthburner/Clockwork 2
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
#gear_ratio: 50:10              #BMG Gear Ratio
gear_ratio: 7.5:1               #Orbiter Extruder
#max_extrude_only_distance: 500
#max_extrude_only_velocity: 120 # <- for orbiter motor LDO-36STH20-1004AHG(XH)
#max_extrude_only_accel:    800 # <- for orbiter motor LDO-36STH20-1004AHG(XH)
microsteps: 32      #Was 16 in old config
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
##      In E0 OUT Position
#heater_pin: PB15
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
#sensor_type: ATC Semitec 104GT-2           #V6 Hotend
sensor_type: ATC Semitec 104NT-4-R025H42G   #Phaetus Rapido Hotend
#sensor_pin: PC0
min_temp: 10
max_temp: 270
max_power: 1.0
min_extrude_temp: 170
control = pid           #Was outcommented in old config
pid_kp = 26.213         #Was outcommented in old config
pid_ki = 1.304          #Was outcommented in old config
pid_kd = 131.721        #Was outcommented in old config
##  Try to keep pressure_advance below 1.0
#pressure_advance: 0.05 ;ANET ABS, White 0,072  #Was 0.025 in old config
##  Default is 0.040, leave stock
#pressure_advance_smooth_time: 0.040 #Was uncommented in old config

##  In E0-MOT Position
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: SB2040:gpio8
#uart_pin: PD7                          
interpolate: false
#run_current: 0.9                       #Clockwork Extruder
run_current: 0.35                       #Orbiter Extruder
#hold_current:   0.1                    #Was uncommented in old config
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#   Bed Heater
#####################################################################
##  SSR Pin - In BED OUT position
[heater_bed]
heater_pin: PB4
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PC3                 # Spider 1.0 & 1.1

##  Adjust max_power so it doesn't exceed the SSR rating. The Omron G3NA-210B-DC5 SSR is rated at 4 amps without a heatsink.
##  The formula is "4 / (Wattage_of_bed_heater / Mains_voltage) = max_power"
##  If max_power is greater than 1.0, use 1.0
max_power: 0.6
min_temp: 0
max_temp: 120
control: pid                    #Was outcommented in old config
pid_kp: 58.437                  #Was outcommented in old config
pid_ki: 2.347                   #Was outcommented in old config
pid_kd: 363.769                 #Was outcommented in old config

#####################################################################
#   Probe 5V Voron TAP
#####################################################################

##  This probe is not used for Z height, only Quad Gantry Leveling
##  In Z+ position
[probe]
##  If your probe is NO instead of NC, change pin to ^!PA3
#[probe]
# Klicky / 5V TAP
pin: SB2040:gpio28
# Omron / 24V TAP
pin: SB2040:gpio25                      #Was pin: ^PA1 in old config
x_offset: 0
y_offset: 0
z_offset: 0                     #Was commented in old config
speed: 10.0
samples: 3                      #Was 1 in old config
samples_result: median
sample_retract_dist: 3.0        #Was 2.0 in old config
samples_tolerance: 0.006        #Was 0.01 in old config
samples_tolerance_retries: 3    #Was 10 in old config

## Voron TAP Activation code, This G-code will allow you to probe cold, but will also prevent you from probing with a nozzle at printing temperature
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}
    

#####################################################################
#   Fan Control
#####################################################################

##  Hotend Fan - FAN0 Connector
[heater_fan hotend_fan]
##--------------------------------------------------------------------
#pin: PB0                        # Spider 1.0 & 1.1
##  Hotend Fan - FAN1
#[heater_fan hotend_fan]
pin: SB2040:gpio14
max_power: 1.0
#kick_start_time: 0.5           #Was uncommented in old config
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

##  Print Cooling Fan - FAN1 Connector
[fan]
##--------------------------------------------------------------------
#pin: PB1                        # Spider 1.0 & 1.1
##  Part Cooling Fan - FAN0
#[fan]
pin: SB2040:gpio13
#max_power: 1.0                 #Was uncommented in old config and 0.4
#kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.10

##  Controller fan - FAN2 Connector
[heater_fan controller_fan]
pin: PB2
#kick_start_time: 0.5           #Was uncommented in old config
heater: heater_bed
heater_temp: 45.0

##  Exhaust fan - In E2 OUT Positon
#[heater_fan exhaust_fan]       #Was uncommented in old config
#pin: PB3                       #Was uncommented in old config
#max_power: 1.0                 #Was uncommented in old config
#shutdown_speed: 0.0            #Was uncommented in old config
##kick_start_time: 0.5          #Was 5.0 in old config
#heater: heater_bed             #Was uncommented in old config
#heater_temp: 60                #Was uncommented in old config
#fan_speed: 1.0                 #Was uncommented in old config

#####################################################################
#   LED Control
#####################################################################

##  Chamber Lighting - In E1 OUT Position
#[output_pin caselight]
#pin: PC8  #E1-Heater
#pwm: true
#shutdown_value: 0
#cycle_time: 0.01

[output_pin daylight]
pin: PB15                      #E0-Heater
pwm: True
cycle_time: 0.01

[neopixel sb_leds]
pin: SB2040:gpio12
#   The pin connected to the neopixel. This parameter must be provided.
chain_count: 3
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
color_order: GRBW
#   Set the pixel order required by the LED hardware. Options are GRB,
#   RGB, GRBW, or RGBW. The default is GRB.
initial_RED: 1.0
initial_GREEN: 0.0
initial_BLUE: 1.0
initial_WHITE: 0.0
#   Sets the initial LED color of the Neopixel. Each value should be
#   between 0.0 and 1.0. The WHITE option is only available on RGBW
#   LEDs. The default for each color is 0.#

# Most configuration for the macros can be done by modifying the variables in the _sb_vars macro
# at the start of this file.

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

#[safe_z_home]                   #Was commented in old config
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin 
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
#home_xy_position:175,175        #Was commented in old config
#speed:100                       #Was commented in old config
#z_hop:10                        #Was commented in old config

##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
[quad_gantry_level]

#--------------------------------------------------------------------
##  Gantry Corners for 350mm Build
##  Uncomment for 350mm build
gantry_corners:
   -60,-10
   410,420
##  Probe points
points:
   50,25
   50,275
   300,275
   300,25

#--------------------------------------------------------------------
speed: 100                      #Was 300 in old config
horizontal_move_z: 10           #Was 15 in old config
retries: 5                      #Was 12 in old config
retry_tolerance: 0.0075         #Was 0.008 in old config
max_adjust: 10

#####################################################################
#   Displays
#####################################################################

#--------------------------------------------------------------------

#--------------------------------------------------------------------


#####################################################################
#   Macros
#####################################################################
[gcode_macro PARK]
gcode:
    {% set th = printer.toolhead %}
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30  

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    PARK
    RESTORE_GCODE_STATE NAME=STATE_G32
   
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    G32                            ; home all axes
    G90                            ; absolute positioning
    G1 Z20 F3000                   ; move nozzle away from bed
   

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR

    # The purpose of the SAVE_GCODE_STATE/RESTORE_GCODE_STATE
    # command pair is to restore the printer's coordinate system
    # and speed settings since the commands above change them.
    # However, to prevent any accidental, unintentional toolhead
    # moves when restoring the state, explicitly set MOVE=0.
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0
